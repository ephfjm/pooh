sys.date
Sys.Date()
duration(num=1,units='years')
my.dob<-as.Date('1983-10-20
')
my.dob
seq(my.dob,length.out=6,by='years)
)
seq(my.dob)
seq(my.dob.length.out=6)
seq(my.dob,length.out=6)
seq(my.dob,length.out=6,by='years')
DATEBIR<-seq(my.dob,length.out=6,by='years')
DATEREG<-rep(sys.Date(),6)
DATEREG<-rep(Sys.Date(),6)
DATEREG
DATEREG-DATEBIR
as.numeric(DATEREG-DATEBIR)
as.numeric(DATEREG-DATEBIR)/365
floor(as.numeric(DATEREG-DATEBIR)/365)
as.factor(floor(as.numeric(DATEREG-DATEBIR)/365))
age<-as.factor(floor(as.numeric(DATEREG-DATEBIR)/365))
age
sex<-as.factor(c(f,f,f,m,m,m))
sex<-as.factor(c('f','f','f','m','m','m'))
sex
dat<-cbind(sex,age)
dat
dat<-table(sex,age)
dat
dat<-list(sex,age)
dat
dat<-cbind(sex,age)
tapply(age,list(sex),fun=mean)
age
age<-as.numeric(age)
age
age<-floor(as.numeric(DATEREG-DATEBIR)/365)
age
tapply(age,list(sex),fun=mean)
?tapply
tapply(age,sex,fun=mean)
sex
table(sex)
table(age)
tapply(age,sex,sum)
tapply(age,sex,mean)
tapply(age,list(sex),mean)
bmi<-seq(18,length=6)
bmi
age<-as.factor(age)
age
tapply(bmi,list(sex,age),mean)
age
sex
bmi
race<-as.factor(c('chinese
','chinese','malay','malay','indian','indian'))
race
race<-as.factor(c('chinese','chinese','malay','malay','indian','indian'))
race
tapply(bmi,list(sex,age,race),mean)
getwd()
setwd('c:/windows/documents
')
setwd('c:\windows\documents')
setwd('c:/windows/documents')
setwd('C:/Windows/documents')
setwd('C:/users/ephfjm/documents')
getwd()
tab<-tapply(bmi,list(sex,age,race),mean)
tab
write.table(tab)
write.table(tab,'tab.csv')
write.table(tab,'tab.csv',sep='',col.names=TRUE,row.names=TRUE)
write.table(tab,'tab.txt',sep='',col.names=TRUE,row.names=TRUE)
tab
str(tab)
tab<-table(tab)
tab
tab<-tapply(bmi,list(sex,age,race),mean)
write.table(tab,'tab.csv',sep=',',col.names=TRUE,row.names=TRUE)
format(as.Date("01/01/2010", format="%m/%d/%Y"), format="%Y")
library(zoo)
q()
setwd("~/")
source('pop_smoke.R')
pop_smoke
library(rjags)
library(rjags)
library(R2WinBUGS)
install.packages("rjags")
library(rjags)
library(rjags)
library(rjags)
install.packages("rjags")
library(rjags)
library(rjags)
dataset=list(Cancer_case=lung_m_smoke$Case,N=dim(lung_m_smoke)[1],Race=lung_m_smoke$Race, Age=lung_m_smoke$Age,
Current=lung_m_smoke$Current, Never=lung_m_smoke$Never, Ex=lung_m_smoke$Ex)
inits <- function() list(b1=0,b2=0,b3=0,a1=0,a2=0,a3=0)
lung.jags <- jags.model("jagsmodel.txt", data = dataset, inits=inits,n.chains=1)
cor(FITpc)
head(x5)
head(x4)
n<-dim(x4)[1]
pcquantile<-matrix(0,n,5)
for(p in 1:5){
for (i in 1:n){
if(FITpc[i,p]<=quantile(FITpc[,p])[2])
pcquantile[i,p]<-1
else if(FITpc[i,p]<=quantile(FITpc[,p])[3])
pcquantile[i,p]<-2
else if(FITpc[i,p]<=quantile(FITpc[,p])[4])
pcquantile[i,p]<-3
else pcquantile[i,p]<-4
}
}
head(pcquantile)
pctable<-array(0,c(10,4,5))
dimnames(pctable)[[3]]<-list('PC1 (High in fat and meat)','PC2 (High in Whole grains and rice)','PC3 (High in rice and alcohol)','PC4 (High in SSB)','PC5 (Low in fruits and alcohol)')
row.names(pctable)<-c('Age','Female (%)','Chinese (%)','Malay (%)','Indian (%)','Education (% secondary or higher)','Marital (% married)','Work (% working)',
'Total energy (kcal)','Number of subjects')
colnames(pctable)<-c('Q1','Q2','Q3','Q4')
head(pctable)
pctable
tapply(x4[,4],pcquantile[,1],function(x){sum(x==2)})
n<-c(sum(pcquantile[,p]==1),sum(pcquantile[,p]==2),sum(pcquantile[,p]==3),sum(pcquantile[,p]==4))
p
p=1
n<-c(sum(pcquantile[,p]==1),sum(pcquantile[,p]==2),sum(pcquantile[,p]==3),sum(pcquantile[,p]==4))
n
tapply(x4[,4],pcquantile[,1],function(x){sum(x==2)/n})
?tapply
tapply(x4[,4],pcquantile[,1],function(x){sum(x==2)})/n
for (p in 1:5){
for (v in 1:9){
n<-c(sum(pcquantile[,p]==1),sum(pcquantile[,p]==2),sum(pcquantile[,p]==3),sum(pcquantile[,p]==4))
if(v==1)  pctable[v,,p]<-tapply(x4[,3],pcquantile[,p],mean)
else if (v==9) pctable[v,,p]<-tapply(x1[,18],pcquantile[,p],mean)
else if (v==2) pctable[v,,p]<-tapply(x4[,4],pcquantile[,p],function(x){sum(x==2)})/n*100
else if (v==3) pctable[v,,p]<-tapply(x4[,5],pcquantile[,p],function(x){sum(x==1)})/n*100
else if (v==4) pctable[v,,p]<-tapply(x4[,5],pcquantile[,p],function(x){sum(x==2)})/n*100
else if (v==5) pctable[v,,p]<-tapply(x4[,5],pcquantile[,p],function(x){sum(x==3)})/n*100
else if (v==6) pctable[v,,p]<-tapply(x4[,6],pcquantile[,p],function(x){sum(x!=2 & x!=1)})/n*100
else if (v==7) pctable[v,,p]<-tapply(x4[,7],pcquantile[,p],function(x){sum(x==2)})/n*100
else if (v==8) pctable[v,,p]<-tapply(x4[,8],pcquantile[,p],function(x){sum(x==1)})/n*100
}
pctable[v,,p]<-n
}
pctable
for (p in 1:5){
for (v in 1:9){
n<-c(sum(pcquantile[,p]==1),sum(pcquantile[,p]==2),sum(pcquantile[,p]==3),sum(pcquantile[,p]==4))
if(v==1)  pctable[v,,p]<-tapply(x4[,3],pcquantile[,p],mean)
else if (v==9) pctable[v,,p]<-tapply(x1[,18],pcquantile[,p],mean)
else if (v==2) pctable[v,,p]<-tapply(x4[,4],pcquantile[,p],function(x){sum(x==2)})/n*100
else if (v==3) pctable[v,,p]<-tapply(x4[,5],pcquantile[,p],function(x){sum(x==1)})/n*100
else if (v==4) pctable[v,,p]<-tapply(x4[,5],pcquantile[,p],function(x){sum(x==2)})/n*100
else if (v==5) pctable[v,,p]<-tapply(x4[,5],pcquantile[,p],function(x){sum(x==3)})/n*100
else if (v==6) pctable[v,,p]<-tapply(x4[,6],pcquantile[,p],function(x){sum(x!=2 & x!=1)})/n*100
else if (v==7) pctable[v,,p]<-tapply(x4[,7],pcquantile[,p],function(x){sum(x==2)})/n*100
else if (v==8) pctable[v,,p]<-tapply(x4[,8],pcquantile[,p],function(x){sum(x==1)})/n*100
}
pctable[10,,p]<-n
}
pctable
round(pctable,2)
plot(x4$age_moh_final,FITpc[,1])
head(FITpc[,1])
plot(x4$age_moh_final,FITpc[,2])
plot(x4$age_moh_final,FITpc[,3])
plot(x4$age_moh_final,FITpc[,4])
plot(x4$age_moh_final,FITpc[,5])
fitcal=glm(x1$kcal_d_sum~FITpc[,1]+FITpc[,2]+FITpc[,3]+FITpc[,4]+FITpc[,5])
summary(fitcal)
summary(pc)
pctable
round(pctable,2)
cor(M1,pc$x[,1])#correlation between first PC score and data
cor(M1,pc$x[,1:5])#correlation between first PC score and data
round(cor(M1,pc$x[,1:5]),2)#correlation between first PC score and data
pctable
plot(fitcal)
head(x4)
head(M1)
head(x1)
summary(fitcal)
fitcal=lm(x1$kcal_d_sum~FITpc[,1]+FITpc[,2]+FITpc[,3]+FITpc[,4]+FITpc[,5])
summary(fitcal)
